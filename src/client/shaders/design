intermediate image:
half res, maybe more

available content:
 * color
 * world space
 * screen space (uh uh)
 * normal
 * depth

additional available content:
 * min/max filter

Optimization list:
 1) ignoring pixels whose world space neighbours are all the same
    -> basically doing a low-res render for close voxels & the sky
 2) early stop
    -> minimizing the cost of the prepass?
 3) depth min filter
    -> starting the rt deeper

1) world space hash - 3*5=15 bits for a radius of 16 voxels
2) nothing - that's an optimization to the optimization
3) depth !

so, depth (32 bit) + 16 bit coordinate hash + 16 bit ???


